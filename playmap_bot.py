import os
import logging
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# === Google Sheets setup ===
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("playmap-bot-key.json", scope)
client = gspread.authorize(creds)
sheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1VY_4vuwW63RLgAvvRg3Ehk7zpou1_scoG8oSHOXV1Es/edit").sheet1

# === Telegram Bot setup ===
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [KeyboardButton("üîç –ó–Ω–∞–π—Ç–∏ –ª–æ–∫–∞—Ü—ñ—é –ø–æ–±–ª–∏–∑—É")],
        [KeyboardButton("‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞–π–¥–∞–Ω—á–∏–∫")],
        [KeyboardButton("üåü –ù–∞–π–∫—Ä–∞—â—ñ –º—ñ—Å—Ü—è"), KeyboardButton("üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å")]
    ]
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø PlayMap –±–æ—Ç. –û–±–µ—Ä–∏, —â–æ —Ö–æ—á–µ—à –∑—Ä–æ–±–∏—Ç–∏:",
        reply_markup=reply_markup
    )

# –¢–∏–º—á–∞—Å–æ–≤–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ—ó (–±—É–¥–µ –∑–∞–º—ñ–Ω–µ–Ω–æ –Ω–∞ –ø–æ–∫—Ä–æ–∫–æ–≤–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è)
async def add_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    sheet.append_row(["001", "–ú–∞–π–¥–∞–Ω—á–∏–∫ –±—ñ–ª—è —à–∫–æ–ª–∏", "–î–∏—Ç—è—á–∏–π", "50.4501", "30.5234", "–¢–∞–∫", "–ù—ñ", "–¢–∞–∫", "", "2025-04-02", update.effective_user.first_name])
    await update.message.reply_text("‚úÖ –õ–æ–∫–∞—Ü—ñ—é –¥–æ–¥–∞–Ω–æ –¥–æ Google –¢–∞–±–ª–∏—Ü—ñ!")

def main():
    application = ApplicationBuilder().token(os.getenv("BOT_TOKEN")).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–¥–æ–¥–∞—Ç–∏ –º–∞–π–¥–∞–Ω—á–∏–∫|‚ûï"), add_location))
    application.run_polling()

if __name__ == '__main__':
    main()
